{"version":3,"sources":["components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","markTodo","removeTodo","Form","className","Group","controlId","Control","plaintext","readOnly","type","style","textDecoration","isDone","placeholder","title","description","date","size","Button","variant","onClick","FormTodo","addTodo","useState","setTitle","setDescription","setDate","onSubmit","e","preventDefault","console","log","Label","value","onChange","target","TodoList","todos","setTodos","newTodos","splice","map","Card","Body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49931e5c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Button, Card, Form,} from 'react-bootstrap';\r\n\r\n\r\nfunction Todo({ todo, index, markTodo, removeTodo }) {\r\n    return (\r\n        <Form className=\"todo\">\r\n            <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Control plaintext readOnly type=\"textarea\" style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }} placeholder={todo.title} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Control plaintext readOnly type=\"textarea\"  style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }} placeholder={todo.description}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Control plaintext readOnly type=\"textarea\" style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }} placeholder={todo.date}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formFileSm\" className=\"file-input\">\r\n                <Form.Control type=\"file\" size=\"sm\" />\r\n            </Form.Group>\r\n            <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\r\n            <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction FormTodo({ addTodo }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!title || !description || !date) return;\r\n        console.log(title, description, date);\r\n        addTodo({title, description, date});\r\n        // setTitle(\"\");\r\n        // setDescription(\"\");\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label><b>Add Todo</b></Form.Label>\r\n                <Form.Control type=\"text\"\r\n                              className=\"input\"\r\n                              value={title}\r\n                              onChange={e => setTitle(e.target.value)}\r\n                              placeholder=\"Title\" />\r\n                <br/>\r\n                <Form.Control type=\"text\"\r\n                              className=\"input\"\r\n                              value={description}\r\n                              onChange={e => setDescription(e.target.value)}\r\n                              placeholder=\"Description\" />\r\n                <br/>\r\n                <Form.Control type=\"date\"\r\n                              className=\"input\"\r\n                              value={date}\r\n                              onChange={e => setDate(e.target.value)}\r\n                              placeholder=\"Date\" />\r\n                </Form.Group>\r\n            <Button variant=\"primary mb-3\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([\r\n        {\r\n            title: \"This is a sample todo\",\r\n            description: \"Description\",\r\n            date:\"2022-11-22\",\r\n            isDone: false\r\n        }\r\n    ]);\r\n\r\n    const addTodo = (todo) => {\r\n        setTodos([...todos, todo]);\r\n    };\r\n\r\n    const markTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isDone = true;\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center mb-4\">Todo List React App</h2>\r\n                <FormTodo addTodo={addTodo} />\r\n                <div>\r\n                    {todos.map((todo, index) => (\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Todo\r\n                                    key={index}\r\n                                    index={index}\r\n                                    todo={todo}\r\n                                    markTodo={markTodo}\r\n                                    removeTodo={removeTodo}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TodoList/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\r\n    <App />\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}